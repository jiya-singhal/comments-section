{"map":"{\"version\":3,\"sources\":[\"/home/jiya/comments-section/src/components/CommentForm/CommentForm.js\",\"/home/jiya/comments-section/src/components/Comment/Comment.js\",\"/home/jiya/comments-section/src/components/CommentList/CommentList.js\",\"/home/jiya/comments-section/src/App.js\",\"/home/jiya/comments-section/src/reportWebVitals.js\",\"/home/jiya/comments-section/src/index.js\"],\"names\":[\"CommentForm\",\"_ref\",\"onAddComment\",\"parentId\",\"isReply\",\"onAddReply\",\"name\",\"setName\",\"useState\",\"text\",\"setText\",\"error\",\"setError\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"e\",\"preventDefault\",\"htmlFor\",\"id\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"Comment\",\"comment\",\"onEditComment\",\"onDeleteComment\",\"isEditing\",\"setIsEditing\",\"editText\",\"setEditText\",\"date\",\"onClick\",\"handleEdit\",\"replies\",\"map\",\"reply\",\"key\",\"CommentList\",\"comments\",\"App\",\"setComments\",\"useEffect\",\"savedComments\",\"JSON\",\"parse\",\"localStorage\",\"getItem\",\"setItem\",\"stringify\",\"addComment\",\"newComment\",\"Date\",\"now\",\"toLocaleString\",\"prevComments\",\"addReply\",\"commentId\",\"newReply\",\"editComment\",\"replyId\",\"deleteComment\",\"filter\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\nimport './CommentForm.css'; // Import CSS file\\n\\nfunction CommentForm({ onAddComment, parentId, isReply, onAddReply }) {\\n    const [name, setName] = useState('');\\n    const [text, setText] = useState('');\\n    const [error, setError] = useState('');\\n\\n    const handleSubmit = (e) => {\\n        e.preventDefault();\\n        if (!name || !text) {\\n            setError('Both fields are required.');\\n            return;\\n        }\\n        setError('');\\n        if (isReply) {\\n            onAddReply(parentId, name, text);\\n        } else {\\n            onAddComment(name, text);\\n        }\\n        setName('');\\n        setText('');\\n    };\\n\\n    return (\\n        <form className=\\\"comment-form\\\" onSubmit={handleSubmit}>\\n            <div className=\\\"form-group\\\">\\n                <label htmlFor=\\\"name\\\">Name:</label>\\n                <input \\n                    id=\\\"name\\\"\\n                    type=\\\"text\\\" \\n                    placeholder=\\\"Name\\\" \\n                    value={name} \\n                    onChange={(e) => setName(e.target.value)} \\n                />\\n            </div>\\n            <div className=\\\"form-group\\\">\\n                <label htmlFor=\\\"comment\\\">Comment:</label>\\n                <textarea \\n                    id=\\\"comment\\\"\\n                    placeholder=\\\"Comment\\\" \\n                    value={text} \\n                    onChange={(e) => setText(e.target.value)} \\n                />\\n            </div>\\n            {error && <p className=\\\"error-message\\\">{error}</p>}\\n            <button type=\\\"submit\\\" className=\\\"submit-button\\\">Submit</button>\\n        </form>\\n    );\\n}\\n\\nexport default CommentForm;\\n\",\"import React, { useState } from 'react';\\nimport CommentForm from '../CommentForm/CommentForm';\\nimport './Comment.css'; // Import the CSS file\\n\\nfunction Comment({ comment, onAddReply, onEditComment, onDeleteComment }) {\\n    const [isEditing, setIsEditing] = useState(false);\\n    const [editText, setEditText] = useState(comment.text);\\n\\n    const handleEdit = () => {\\n        if (isEditing) {\\n            onEditComment(comment.id, editText, false);\\n        }\\n        setIsEditing(!isEditing);\\n    };\\n\\n    return (\\n        <div className=\\\"comment-container\\\">\\n            <p><strong>{comment.name}</strong></p>\\n            {isEditing ? (\\n                <textarea\\n                    value={editText}\\n                    onChange={(e) => setEditText(e.target.value)}\\n                />\\n            ) : (\\n                <p className=\\\"comment-text\\\">{comment.text}</p>\\n            )}\\n            <p className=\\\"comment-date\\\">{comment.date}</p>\\n            <button className=\\\"edit-button\\\" onClick={handleEdit}>\\n                {isEditing ? 'Save' : 'Edit'}\\n            </button>\\n            <button className=\\\"delete-button\\\" onClick={() => onDeleteComment(comment.id, false)}>\\n                Delete\\n            </button>\\n            <CommentForm onAddReply={onAddReply} parentId={comment.id} isReply={true} />\\n            <div>\\n                {comment.replies.map(reply => (\\n                    <div key={reply.id} className=\\\"reply-container\\\">\\n                        <p><strong>{reply.name}</strong></p>\\n                        <p>{reply.text}</p>\\n                        <p className=\\\"comment-date\\\">{reply.date}</p>\\n                        <button\\n                            className=\\\"edit-button\\\"\\n                            onClick={() => onEditComment(comment.id, reply.text, true, reply.id)}\\n                        >\\n                            Edit\\n                        </button>\\n                        <button\\n                            className=\\\"delete-button\\\"\\n                            onClick={() => onDeleteComment(comment.id, true, reply.id)}\\n                        >\\n                            Delete\\n                        </button>\\n                    </div>\\n                ))}\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Comment;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Comment from '../Comment/Comment';\\nimport './CommentList.css'; // Import CSS file if needed\\n\\nfunction CommentList({ comments, onAddReply, onEditComment, onDeleteComment }) {\\n    return (\\n        <div className=\\\"comment-list\\\">\\n            {comments.map(comment => (\\n                <Comment \\n                    key={comment.id} \\n                    comment={comment} \\n                    onAddReply={onAddReply} \\n                    onEditComment={onEditComment} \\n                    onDeleteComment={onDeleteComment} \\n                />\\n            ))}\\n        </div>\\n    );\\n}\\n\\nCommentList.propTypes = {\\n    comments: PropTypes.arrayOf(\\n        PropTypes.shape({\\n            id: PropTypes.number.isRequired,\\n            name: PropTypes.string.isRequired,\\n            text: PropTypes.string.isRequired,\\n            date: PropTypes.string.isRequired,\\n            replies: PropTypes.arrayOf(\\n                PropTypes.shape({\\n                    id: PropTypes.number.isRequired,\\n                    name: PropTypes.string.isRequired,\\n                    text: PropTypes.string.isRequired,\\n                    date: PropTypes.string.isRequired\\n                })\\n            ).isRequired\\n        })\\n    ).isRequired,\\n    onAddReply: PropTypes.func.isRequired,\\n    onEditComment: PropTypes.func.isRequired,\\n    onDeleteComment: PropTypes.func.isRequired\\n};\\n\\nexport default CommentList;\\n\",\"import React, { useEffect, useState } from 'react';\\nimport './App.css';\\nimport CommentForm from './components/CommentForm/CommentForm';\\nimport CommentList from './components/CommentList/CommentList';\\n\\nfunction App() {\\n    const [comments, setComments] = useState([]);\\n\\n    useEffect(() => {\\n        const savedComments = JSON.parse(localStorage.getItem('comments'));\\n        if (savedComments) {\\n            setComments(savedComments);\\n        }\\n    }, []);\\n\\n    useEffect(() => {\\n        localStorage.setItem('comments', JSON.stringify(comments));\\n    }, [comments]);\\n\\n    const addComment = (name, text) => {\\n        const newComment = {\\n            id: Date.now(),\\n            name,\\n            text,\\n            date: new Date().toLocaleString(),\\n            replies: []\\n        };\\n        setComments(prevComments => [...prevComments, newComment]);\\n    };\\n\\n    const addReply = (commentId, name, text) => {\\n        const newReply = {\\n            id: Date.now(),\\n            name,\\n            text,\\n            date: new Date().toLocaleString()\\n        };\\n        setComments(prevComments => \\n            prevComments.map(comment => \\n                comment.id === commentId ? {\\n                    ...comment, \\n                    replies: [...comment.replies, newReply]\\n                } : comment\\n            )\\n        );\\n    };\\n\\n    const editComment = (commentId, text, isReply, replyId) => {\\n        setComments(prevComments =>\\n            prevComments.map(comment =>\\n                comment.id === commentId ? {\\n                    ...comment,\\n                    replies: isReply ? \\n                        comment.replies.map(reply =>\\n                            reply.id === replyId ? { ...reply, text } : reply\\n                        ) : comment.replies,\\n                    text: !isReply ? text : comment.text\\n                } : comment\\n            )\\n        );\\n    };\\n\\n    const deleteComment = (commentId, isReply, replyId) => {\\n        setComments(prevComments =>\\n            prevComments.map(comment =>\\n                comment.id === commentId ? {\\n                    ...comment,\\n                    replies: isReply ?\\n                        comment.replies.filter(reply => reply.id !== replyId) :\\n                        comment.replies\\n                } : comment\\n            ).filter(comment => !isReply || comment.id !== commentId)\\n        );\\n    };\\n\\n    return (\\n        <div className=\\\"App\\\">\\n            <h1>Comments Section</h1>\\n            <CommentForm onAddComment={addComment} />\\n            <CommentList \\n                comments={comments} \\n                onAddReply={addReply} \\n                onEditComment={editComment} \\n                onDeleteComment={deleteComment} \\n            />\\n        </div>\\n    );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,t,n){e.exports=n(17)},,,,,,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),m=n(2),o=n.n(m);n(12),n(13),n(14);var c=function(e){let{onAddComment:t,parentId:n,isReply:m,onAddReply:o}=e;const[c,r]=Object(a.useState)(\"\"),[i,s]=Object(a.useState)(\"\"),[d,u]=Object(a.useState)(\"\");return l.a.createElement(\"form\",{className:\"comment-form\",onSubmit:e=>{e.preventDefault(),c&&i?(u(\"\"),m?o(n,c,i):t(c,i),r(\"\"),s(\"\")):u(\"Both fields are required.\")}},l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",{htmlFor:\"name\"},\"Name:\"),l.a.createElement(\"input\",{id:\"name\",type:\"text\",placeholder:\"Name\",value:c,onChange:e=>r(e.target.value)})),l.a.createElement(\"div\",{className:\"form-group\"},l.a.createElement(\"label\",{htmlFor:\"comment\"},\"Comment:\"),l.a.createElement(\"textarea\",{id:\"comment\",placeholder:\"Comment\",value:i,onChange:e=>s(e.target.value)})),d&&l.a.createElement(\"p\",{className:\"error-message\"},d),l.a.createElement(\"button\",{type:\"submit\",className:\"submit-button\"},\"Submit\"))};n(15);var r=function(e){let{comment:t,onAddReply:n,onEditComment:m,onDeleteComment:o}=e;const[r,i]=Object(a.useState)(!1),[s,d]=Object(a.useState)(t.text);return l.a.createElement(\"div\",{className:\"comment-container\"},l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,t.name)),r?l.a.createElement(\"textarea\",{value:s,onChange:e=>d(e.target.value)}):l.a.createElement(\"p\",{className:\"comment-text\"},t.text),l.a.createElement(\"p\",{className:\"comment-date\"},t.date),l.a.createElement(\"button\",{className:\"edit-button\",onClick:()=>{r&&m(t.id,s,!1),i(!r)}},r?\"Save\":\"Edit\"),l.a.createElement(\"button\",{className:\"delete-button\",onClick:()=>o(t.id,!1)},\"Delete\"),l.a.createElement(c,{onAddReply:n,parentId:t.id,isReply:!0}),l.a.createElement(\"div\",null,t.replies.map(e=>l.a.createElement(\"div\",{key:e.id,className:\"reply-container\"},l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,e.name)),l.a.createElement(\"p\",null,e.text),l.a.createElement(\"p\",{className:\"comment-date\"},e.date),l.a.createElement(\"button\",{className:\"edit-button\",onClick:()=>m(t.id,e.text,!0,e.id)},\"Edit\"),l.a.createElement(\"button\",{className:\"delete-button\",onClick:()=>o(t.id,!0,e.id)},\"Delete\")))))};n(16);var i=function(e){let{comments:t,onAddReply:n,onEditComment:a,onDeleteComment:m}=e;return l.a.createElement(\"div\",{className:\"comment-list\"},t.map(e=>l.a.createElement(r,{key:e.id,comment:e,onAddReply:n,onEditComment:a,onDeleteComment:m})))};var s=function(){const[e,t]=Object(a.useState)([]);return Object(a.useEffect)(()=>{const e=JSON.parse(localStorage.getItem(\"comments\"));e&&t(e)},[]),Object(a.useEffect)(()=>{localStorage.setItem(\"comments\",JSON.stringify(e))},[e]),l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(\"h1\",null,\"Comments Section\"),l.a.createElement(c,{onAddComment:(e,n)=>{const a={id:Date.now(),name:e,text:n,date:(new Date).toLocaleString(),replies:[]};t(e=>[...e,a])}}),l.a.createElement(i,{comments:e,onAddReply:(e,n,a)=>{const l={id:Date.now(),name:n,text:a,date:(new Date).toLocaleString()};t(t=>t.map(t=>t.id===e?{...t,replies:[...t.replies,l]}:t))},onEditComment:(e,n,a,l)=>{t(t=>t.map(t=>t.id===e?{...t,replies:a?t.replies.map(e=>e.id===l?{...e,text:n}:e):t.replies,text:a?t.text:n}:t))},onDeleteComment:(e,n,a)=>{t(t=>t.map(t=>t.id===e?{...t,replies:n?t.replies.filter(e=>e.id!==a):t.replies}:t).filter(t=>!n||t.id!==e))}}))};var d=e=>{e&&e instanceof Function&&n.e(3).then(n.bind(null,18)).then(t=>{let{getCLS:n,getFID:a,getFCP:l,getLCP:m,getTTFB:o}=t;n(e),a(e),l(e),m(e),o(e)})};o.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(s,null))),d()}],[[3,1,2]]]);","extractedComments":[]}