{"map":"{\"version\":3,\"sources\":[\"/home/jiya/comments-section/src/components/CommentForm/CommentForm.js\",\"/home/jiya/comments-section/src/components/Comment/Comment.js\",\"/home/jiya/comments-section/src/components/CommentList/CommentList.js\",\"/home/jiya/comments-section/src/App.js\",\"/home/jiya/comments-section/src/reportWebVitals.js\",\"/home/jiya/comments-section/src/index.js\"],\"names\":[\"CommentForm\",\"_ref\",\"onAddComment\",\"parentId\",\"isReply\",\"onAddReply\",\"name\",\"setName\",\"useState\",\"text\",\"setText\",\"error\",\"setError\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"e\",\"preventDefault\",\"htmlFor\",\"type\",\"id\",\"placeholder\",\"value\",\"onChange\",\"target\",\"Comment\",\"comment\",\"onEditComment\",\"onDeleteComment\",\"isEditing\",\"setIsEditing\",\"editText\",\"setEditText\",\"onClick\",\"FaTrash\",\"date\",\"handleEdit\",\"replies\",\"map\",\"reply\",\"key\",\"CommentList\",\"comments\",\"App\",\"setComments\",\"useEffect\",\"savedComments\",\"JSON\",\"parse\",\"localStorage\",\"getItem\",\"setItem\",\"stringify\",\"addComment\",\"newComment\",\"Date\",\"now\",\"toLocaleString\",\"addReply\",\"commentId\",\"newReply\",\"editComment\",\"replyId\",\"deleteComment\",\"filter\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from 'react';\\nimport './CommentForm.css'; // Note the relative path\\n\\n\\nfunction CommentForm({ onAddComment, parentId, isReply, onAddReply }) {\\n    const [name, setName] = useState('');\\n    const [text, setText] = useState('');\\n    const [error, setError] = useState('');\\n\\n    const handleSubmit = (e) => {\\n        e.preventDefault();\\n        if (!name || !text) {\\n            setError('Both fields are required.');\\n            return;\\n        }\\n        setError('');\\n        if (isReply) {\\n            onAddReply(parentId, name, text);\\n        } else {\\n            onAddComment(name, text);\\n        }\\n        setName('');\\n        setText('');\\n    };\\n\\n    return (\\n        <form className=\\\"comment-form\\\" onSubmit={handleSubmit}>\\n            <div className=\\\"form-group\\\">\\n                <label htmlFor=\\\"name\\\">Name</label>\\n                <input \\n                    type=\\\"text\\\" \\n                    id=\\\"name\\\"\\n                    placeholder=\\\"Name\\\" \\n                    value={name} \\n                    onChange={(e) => setName(e.target.value)} \\n                />\\n            </div>\\n            <div className=\\\"form-group\\\">\\n                <label htmlFor=\\\"comment\\\">Comment</label>\\n                <textarea \\n                    id=\\\"comment\\\"\\n                    placeholder=\\\"Comment\\\" \\n                    value={text} \\n                    onChange={(e) => setText(e.target.value)} \\n                />\\n            </div>\\n            {error && <p className=\\\"error-message\\\">{error}</p>}\\n            <button type=\\\"submit\\\" className=\\\"submit-button\\\">Submit</button>\\n        </form>\\n    );\\n}\\n\\nexport default CommentForm;\\n\",\"import React, { useState } from 'react';\\nimport './Comment.css'; \\nimport CommentForm from '../CommentForm/CommentForm';\\nimport { FaTrash } from 'react-icons/fa'; // Import the delete icon from react-icons\\n\\nfunction Comment({ comment, onAddReply, onEditComment, onDeleteComment }) {\\n    const [isEditing, setIsEditing] = useState(false);\\n    const [editText, setEditText] = useState(comment.text);\\n\\n    const handleEdit = () => {\\n        setIsEditing(!isEditing);\\n        if (isEditing) {\\n            onEditComment(comment.id, editText, false);\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"comment-container\\\">\\n            <div className=\\\"comment-header\\\">\\n                <strong>{comment.name}</strong>\\n                <button className=\\\"delete-button\\\" onClick={() => onDeleteComment(comment.id, false)}>\\n                    <FaTrash /> {/* FontAwesome trash icon */}\\n                </button>\\n            </div>\\n            {isEditing ? (\\n                <textarea\\n                    className=\\\"comment-edit\\\"\\n                    value={editText}\\n                    onChange={(e) => setEditText(e.target.value)}\\n                />\\n            ) : (\\n                <p className=\\\"comment-text\\\">{comment.text}</p>\\n            )}\\n            <p className=\\\"comment-date\\\">{comment.date}</p>\\n            <div className=\\\"comment-buttons\\\">\\n                <button className=\\\"edit-button\\\" onClick={handleEdit}>\\n                    {isEditing ? 'Save' : 'Edit'}\\n                </button>\\n            </div>\\n            <CommentForm onAddReply={onAddReply} parentId={comment.id} isReply={true} />\\n            <div>\\n                {comment.replies.map(reply => (\\n                    <div key={reply.id} className=\\\"reply-container\\\">\\n                        <div className=\\\"reply-header\\\">\\n                            <strong>{reply.name}</strong>\\n                            <button className=\\\"delete-button\\\" onClick={() => onDeleteComment(comment.id, true, reply.id)}>\\n                                <FaTrash /> {/* FontAwesome trash icon */}\\n                            </button>\\n                        </div>\\n                        <p className=\\\"reply-text\\\">{reply.text}</p>\\n                        <p className=\\\"reply-date\\\">{reply.date}</p>\\n                        <div className=\\\"reply-buttons\\\">\\n                            <button className=\\\"edit-button\\\" onClick={() => onEditComment(comment.id, reply.text, true, reply.id)}>\\n                                Edit\\n                            </button>\\n                        </div>\\n                    </div>\\n                ))}\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Comment;\\n\",\"import React from 'react';\\nimport Comment from '../Comment/Comment';\\n\\nfunction CommentList({ comments, onAddReply, onEditComment, onDeleteComment }) {\\n    return (\\n        <div>\\n            {comments.map(comment => (\\n                <Comment \\n                    key={comment.id} \\n                    comment={comment} \\n                    onAddReply={onAddReply} \\n                    onEditComment={onEditComment} \\n                    onDeleteComment={onDeleteComment} \\n                />\\n            ))}\\n        </div>\\n    );\\n}\\n\\nexport default CommentList;\\n\",\"import React, { useEffect, useState } from 'react';\\nimport CommentForm from './components/CommentForm/CommentForm';\\nimport CommentList from './components/CommentList/CommentList';\\n\\nfunction App() {\\n    const [comments, setComments] = useState([]);\\n\\n    useEffect(() => {\\n        const savedComments = JSON.parse(localStorage.getItem('comments'));\\n        if (savedComments) {\\n            setComments(savedComments);\\n        }\\n    }, []);\\n\\n    useEffect(() => {\\n        localStorage.setItem('comments', JSON.stringify(comments));\\n    }, [comments]);\\n\\n    const addComment = (name, text) => {\\n        const newComment = {\\n            id: Date.now(),\\n            name,\\n            text,\\n            date: new Date().toLocaleString(),\\n            replies: []\\n        };\\n        setComments([...comments, newComment]);\\n    };\\n\\n    const addReply = (commentId, name, text) => {\\n        const newReply = {\\n            id: Date.now(),\\n            name,\\n            text,\\n            date: new Date().toLocaleString()\\n        };\\n        setComments(comments.map(comment => \\n            comment.id === commentId ? {...comment, replies: [...comment.replies, newReply]} : comment\\n        ));\\n    };\\n\\n    const editComment = (commentId, text, isReply, replyId) => {\\n        if (isReply) {\\n            setComments(comments.map(comment =>\\n                comment.id === commentId ? {\\n                    ...comment,\\n                    replies: comment.replies.map(reply =>\\n                        reply.id === replyId ? { ...reply, text } : reply\\n                    )\\n                } : comment\\n            ));\\n        } else {\\n            setComments(comments.map(comment =>\\n                comment.id === commentId ? { ...comment, text } : comment\\n            ));\\n        }\\n    };\\n\\n    const deleteComment = (commentId, isReply, replyId) => {\\n        if (isReply) {\\n            setComments(comments.map(comment =>\\n                comment.id === commentId ? {\\n                    ...comment,\\n                    replies: comment.replies.filter(reply => reply.id !== replyId)\\n                } : comment\\n            ));\\n        } else {\\n            setComments(comments.filter(comment => comment.id !== commentId));\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"App\\\">\\n            <h1>Comments Section</h1>\\n            <CommentForm onAddComment={addComment} />\\n            <CommentList \\n                comments={comments} \\n                onAddReply={addReply} \\n                onEditComment={editComment} \\n                onDeleteComment={deleteComment} \\n            />\\n        </div>\\n    );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,function(e,t,a){e.exports=a(16)},,,,,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),m=a.n(n),l=a(3),c=a.n(l);a(13),a(14);var o=function(e){let{onAddComment:t,parentId:a,isReply:l,onAddReply:c}=e;const[o,r]=Object(n.useState)(\"\"),[s,i]=Object(n.useState)(\"\"),[d,u]=Object(n.useState)(\"\");return m.a.createElement(\"form\",{className:\"comment-form\",onSubmit:e=>{e.preventDefault(),o&&s?(u(\"\"),l?c(a,o,s):t(o,s),r(\"\"),i(\"\")):u(\"Both fields are required.\")}},m.a.createElement(\"div\",{className:\"form-group\"},m.a.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),m.a.createElement(\"input\",{type:\"text\",id:\"name\",placeholder:\"Name\",value:o,onChange:e=>r(e.target.value)})),m.a.createElement(\"div\",{className:\"form-group\"},m.a.createElement(\"label\",{htmlFor:\"comment\"},\"Comment\"),m.a.createElement(\"textarea\",{id:\"comment\",placeholder:\"Comment\",value:s,onChange:e=>i(e.target.value)})),d&&m.a.createElement(\"p\",{className:\"error-message\"},d),m.a.createElement(\"button\",{type:\"submit\",className:\"submit-button\"},\"Submit\"))},r=(a(15),a(1));var s=function(e){let{comment:t,onAddReply:a,onEditComment:l,onDeleteComment:c}=e;const[s,i]=Object(n.useState)(!1),[d,u]=Object(n.useState)(t.text);return m.a.createElement(\"div\",{className:\"comment-container\"},m.a.createElement(\"div\",{className:\"comment-header\"},m.a.createElement(\"strong\",null,t.name),m.a.createElement(\"button\",{className:\"delete-button\",onClick:()=>c(t.id,!1)},m.a.createElement(r.a,null),\" \")),s?m.a.createElement(\"textarea\",{className:\"comment-edit\",value:d,onChange:e=>u(e.target.value)}):m.a.createElement(\"p\",{className:\"comment-text\"},t.text),m.a.createElement(\"p\",{className:\"comment-date\"},t.date),m.a.createElement(\"div\",{className:\"comment-buttons\"},m.a.createElement(\"button\",{className:\"edit-button\",onClick:()=>{i(!s),s&&l(t.id,d,!1)}},s?\"Save\":\"Edit\")),m.a.createElement(o,{onAddReply:a,parentId:t.id,isReply:!0}),m.a.createElement(\"div\",null,t.replies.map(e=>m.a.createElement(\"div\",{key:e.id,className:\"reply-container\"},m.a.createElement(\"div\",{className:\"reply-header\"},m.a.createElement(\"strong\",null,e.name),m.a.createElement(\"button\",{className:\"delete-button\",onClick:()=>c(t.id,!0,e.id)},m.a.createElement(r.a,null),\" \")),m.a.createElement(\"p\",{className:\"reply-text\"},e.text),m.a.createElement(\"p\",{className:\"reply-date\"},e.date),m.a.createElement(\"div\",{className:\"reply-buttons\"},m.a.createElement(\"button\",{className:\"edit-button\",onClick:()=>l(t.id,e.text,!0,e.id)},\"Edit\"))))))};var i=function(e){let{comments:t,onAddReply:a,onEditComment:n,onDeleteComment:l}=e;return m.a.createElement(\"div\",null,t.map(e=>m.a.createElement(s,{key:e.id,comment:e,onAddReply:a,onEditComment:n,onDeleteComment:l})))};var d=function(){const[e,t]=Object(n.useState)([]);return Object(n.useEffect)(()=>{const e=JSON.parse(localStorage.getItem(\"comments\"));e&&t(e)},[]),Object(n.useEffect)(()=>{localStorage.setItem(\"comments\",JSON.stringify(e))},[e]),m.a.createElement(\"div\",{className:\"App\"},m.a.createElement(\"h1\",null,\"Comments Section\"),m.a.createElement(o,{onAddComment:(a,n)=>{const m={id:Date.now(),name:a,text:n,date:(new Date).toLocaleString(),replies:[]};t([...e,m])}}),m.a.createElement(i,{comments:e,onAddReply:(a,n,m)=>{const l={id:Date.now(),name:n,text:m,date:(new Date).toLocaleString()};t(e.map(e=>e.id===a?{...e,replies:[...e.replies,l]}:e))},onEditComment:(a,n,m,l)=>{t(m?e.map(e=>e.id===a?{...e,replies:e.replies.map(e=>e.id===l?{...e,text:n}:e)}:e):e.map(e=>e.id===a?{...e,text:n}:e))},onDeleteComment:(a,n,m)=>{t(n?e.map(e=>e.id===a?{...e,replies:e.replies.filter(e=>e.id!==m)}:e):e.filter(e=>e.id!==a))}}))};var u=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,17)).then(t=>{let{getCLS:a,getFID:n,getFCP:m,getLCP:l,getTTFB:c}=t;a(e),n(e),m(e),l(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(m.a.createElement(m.a.StrictMode,null,m.a.createElement(d,null))),u()}],[[4,1,2]]]);","extractedComments":[]}